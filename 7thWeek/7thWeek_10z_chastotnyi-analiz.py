# import time
# startTime = time.time()

# Дан текст. Выведите все слова, встречающиеся в тексте, по одному на каждую
# строку. Слова должны быть отсортированы по убыванию их количества появления
# в тексте, а при одинаковой частоте появления — в лексикографическом порядке.
# Указание.
# После того, как вы создадите словарь всех слов, вам захочется отсортировать
# его по частоте встречаемости слова. Желаемого можно добиться, если создать
# список, элементами которого будут кортежи из двух элементов: частота
# встречаемости слова и само слово. Например, [(2, 'hi'), (1, 'what'), (3,
# 'is')]. Тогда стандартная сортировка будет сортировать список кортежей,
# при этом кортежи сравниваются по первому элементу, а если они равны —то
# по второму. Это почти то, что требуется в задаче.

fileIn = open('input.txt', 'r', encoding='utf8')
wordsList = []
for line in fileIn:
    line = line.rstrip().split()
    for word in line:
        wordsList.append(word)

countDict = {}
for word in wordsList:
    word = word
    countDict[word] = countDict.get(word, 0) + 1

# https://server.179.ru/tasks/python/theory/19-lambda.html
# тут о сложной сортировке
print(*sorted(countDict, key=lambda n: (-countDict[n], n)), sep='\n')

# totalTime = time.time() - startTime
# print("Время, затраченное на выполнение данного кода = ", totalTime)
